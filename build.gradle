buildscript {
	ext {
		springBootVersion = '2.2.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.1.RELEASE")
	}
}

plugins {
	id 'net.ltgt.apt' version '0.10'
	id 'org.liquibase.gradle' version '2.0.1'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-cloud-contract'

liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/changes/' + System.getenv('LIQUIBASE_DIFF_FILENAME')
			url System.getenv('JDBC_DATABASE_URL')
			referenceUrl 'hibernate:spring:club.tempvs.library.domain?dialect=org.hibernate.dialect.PostgreSQL95Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
			username System.getenv('JDBC_DATABASE_USERNAME')
			password System.getenv('JDBC_DATABASE_PASSWORD')
		}
	}
}

diff.dependsOn compileJava
diffChangeLog.dependsOn compileJava
generateChangelog.dependsOn compileJava

group = 'club.tempvs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', 'Hoxton.RC1')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
	//database
	implementation "org.postgresql:postgresql:${postgresVersion}"
	implementation "org.liquibase:liquibase-core:${liquibaseVersion}" //to fire changelog migration on startup
	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	//liquibase
	liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseVersion}"
	liquibaseRuntime "org.postgresql:postgresql:${postgresVersion}"
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime sourceSets.main.output
	//testing
	testRuntime 'com.h2database:h2:1.4.194'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
	archiveBaseName = 'tempvs-library'
	archiveVersion = ''
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/java')
		}

		resources.srcDir file('src/integration-test/resources')
	}
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}
